// <auto-generated />
using System;
using DevSync.PocPro.Accounts.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevSync.PocPro.Accounts.Api.Data.Migrations
{
    [DbContext(typeof(AccountsDbContext))]
    [Migration("20250428144902_Account_Migrations_02")]
    partial class Account_Migrations_02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserPermission", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uuid");

                    b.HasKey("ApplicationUserId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("ApplicationUserPermission");
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherNames")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01967cdf-76ba-73bd-a768-547dd237f588"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 882, DateTimeKind.Unspecified).AddTicks(3537), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PERMISSIONS"
                        },
                        new
                        {
                            Id = new Guid("01967cdf-76bc-73f8-a949-88397f726e20"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 884, DateTimeKind.Unspecified).AddTicks(7016), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_USERS"
                        },
                        new
                        {
                            Id = new Guid("01967cdf-76bc-7045-a591-559006d37fc8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 884, DateTimeKind.Unspecified).AddTicks(7030), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_USERS"
                        },
                        new
                        {
                            Id = new Guid("01967cdf-76bc-75e5-8fb6-767a45feb346"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 884, DateTimeKind.Unspecified).AddTicks(7034), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_TENANTS"
                        },
                        new
                        {
                            Id = new Guid("01967cdf-76bc-75d2-b0fe-c7fb302a10c5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 884, DateTimeKind.Unspecified).AddTicks(7049), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_TENANTS"
                        },
                        new
                        {
                            Id = new Guid("01967cdf-76bc-7144-a6bf-3a40f93ae81b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 884, DateTimeKind.Unspecified).AddTicks(7052), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_PRODUCTS"
                        },
                        new
                        {
                            Id = new Guid("01967cdf-76bc-7f40-a739-a3fff151e426"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 4, 28, 14, 49, 1, 884, DateTimeKind.Unspecified).AddTicks(7054), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PRODUCTS"
                        });
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.Tenants.Domain.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("text");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("ApplicationUserPermission", b =>
                {
                    b.HasOne("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
