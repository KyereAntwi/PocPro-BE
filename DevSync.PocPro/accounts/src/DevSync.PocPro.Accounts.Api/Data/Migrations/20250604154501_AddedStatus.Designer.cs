// <auto-generated />
using System;
using DevSync.PocPro.Accounts.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevSync.PocPro.Accounts.Api.Data.Migrations
{
    [DbContext(typeof(AccountsDbContext))]
    [Migration("20250604154501_AddedStatus")]
    partial class AddedStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserPermission", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uuid");

                    b.HasKey("ApplicationUserId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("ApplicationUserPermission");
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherNames")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01973b9e-06cd-73f8-92f7-c988e26ce9a9"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 645, DateTimeKind.Unspecified).AddTicks(2690), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PERMISSIONS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7691-ba07-b54fbc0797a4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6710), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_USERS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-719e-894e-f9854a36bbbb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6730), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_USERS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7225-b878-6bfce2302b17"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6730), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_TENANTS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7345-86fa-9236c56aa1f2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6740), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_TENANTS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-739c-ab58-cb413a91189a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6750), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_PRODUCTS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7050-9f91-fb19b3cd3d01"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6760), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PRODUCTS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7115-92e2-4c1d4fbf944a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6760), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_CATEGORIES",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7bbb-b63f-868550e714e2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6770), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_SUPPLIERS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7cd6-b48c-3babb81c170d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6780), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_SUPPLIERS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7f3f-8043-a14aa13481bb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6780), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_STOCKS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-73f1-ae83-82196ee711bf"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6790), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_POS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7eb1-92f4-989c082289a2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6800), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "GET_POS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7324-a0e7-a537ddfddc66"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6810), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_SALES",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-765b-8982-85a3235a3258"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6810), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_SALES",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-72cd-a3eb-e3deccc0e139"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6820), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PURCHASES",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7dbe-b49d-ec880a0d71f4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6830), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_PURCHASES",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-761d-b2fb-e1279cbf2fc0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6830), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_CUSTOMERS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-74f0-83fa-6b533ee20314"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6840), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_CUSTOMERS",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("01973b9e-06d7-7907-80de-1cdc2d9a2ec6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 6, 4, 15, 45, 1, 655, DateTimeKind.Unspecified).AddTicks(6850), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_ORDERS",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.Tenants.Domain.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("text");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("ApplicationUserPermission", b =>
                {
                    b.HasOne("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
