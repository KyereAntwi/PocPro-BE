// <auto-generated />
using System;
using DevSync.PocPro.Accounts.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevSync.PocPro.Accounts.Api.Data.Migrations
{
    [DbContext(typeof(AccountsDbContext))]
    partial class AccountsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserPermission", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uuid");

                    b.HasKey("ApplicationUserId", "PermissionsId");

                    b.HasIndex("PermissionsId");

                    b.ToTable("ApplicationUserPermission");
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherNames")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0196c3ec-c2ed-7290-bf40-e85e289efc40"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 693, DateTimeKind.Unspecified).AddTicks(4470), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PERMISSIONS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7dfc-ae00-dbae0a1bd953"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9240), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_USERS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7e08-892d-4136bbc77b9a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9250), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_USERS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-796e-8865-46b3069c79b6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9260), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_TENANTS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7dd8-b54f-3448ea9b5775"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9270), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_TENANTS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7cc9-98f8-64bd8235d996"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9270), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_PRODUCTS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7b09-9167-ecca27d95f33"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9280), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PRODUCTS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7795-910c-9fa91a652152"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9290), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_CATEGORIES"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7a5e-9ea9-bdaca2f87d9b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9290), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_SUPPLIERS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-794d-90c5-9e446b97091c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9300), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_SUPPLIERS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7956-b31f-c5dce0a4304f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9310), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_STOCKS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7e8c-8223-c4f06fe4826f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9310), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_POS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-73ea-ba9e-ad09416ca88a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9320), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "GET_POS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7df7-ab6c-656c1d9443d2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9330), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_SALES"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7e3d-9b78-7c35d855c765"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9330), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_SALES"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-78d0-9c85-022ca9bf86da"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9340), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_PURCHASES"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-785d-bba4-7c9d9a745246"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9350), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_PURCHASES"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7f9b-a22c-0e15ab14b3cc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9360), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "MANAGE_CUSTOMERS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7609-b2a5-9f1cfa593fa5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9360), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_CUSTOMERS"
                        },
                        new
                        {
                            Id = new Guid("0196c3ec-c2f7-7cf8-92f0-47af22e33a75"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 5, 12, 9, 56, 35, 703, DateTimeKind.Unspecified).AddTicks(9370), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            PermissionType = "VIEW_ORDERS"
                        });
                });

            modelBuilder.Entity("DevSync.PocPro.Accounts.Api.Features.Tenants.Domain.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("text");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("ApplicationUserPermission", b =>
                {
                    b.HasOne("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevSync.PocPro.Accounts.Api.Features.ApplicationUsers.Domain.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
